VL = value (number or char)
ID = identificador
minmax seran proposiciones (ID | NUM | TRUE | FALSE)

<struct> ::= 

<programa> ::= <declList>

<declList> ::= <decl> <declList>

<decl> ::= <vardecl> | <fundecl>

<vardecl> ::= <tipo de dato> <vardeclList>

<vardeclList> ::= <vardeclInit> "," <vardeclList> | <vardeclInit>

<vardeclInit> ::= "ID" ";" | "ID" "=" "VL" ";"

<tipo de dato> ::= int | char | float

<fundecl> ::= <tipo de dato> "ID" "(" <opc-parametros> ")" "{" <stmtList> "}"

<opc-parametros> ::= <tipo de dato> "ID" | <tipo de dato> "ID" "," <opc-parametros> | "e"

<stmtList> ::= <stmt> ";" "\n" <stmtList> | <stmt> ";" | "e"

<stmt> ::= <expStmt> | <selectStmt> | <iterStmt> | <returnStmt> | <breakStmt>

<expStmt> ::= <exp> ; | ;

<selectStmt> ::= "if" "(" <simpleExp> ")" "{" <stmt> "}" | "if" "(" <simpleExp> ")" "{" stmt "}" "else" "{" <stmt> "}" 

<iterStmt> ::= "while" "(" <simpleExp> ")" "{" <stmt> "}" | "do" "{" <stmt> "}" "while" "(" <simpleExp> ")" 
        | "for" "(" <stmt> ";" <stmt> ";" <stmt> ")" "{" <stmt> "}"

<returnStmt> ::= "return" ";" | "return" <exp> ";"

<breakStmt> ::= "break" ";"

<exp> ::= "ID" "=" <exp> | <simpleExp>

<simpleExp> ::= <andExp> "OR" <simpleExp> | <andExp>

<andExp> ::= <unarioExp> "AND" <andExp> | <unarioExp>

<unarioExp> ::= "NOT" <unarioExp> | <relExp>

