<Start> ::= <declare> | <comment> <Start>
<comment> ::= 'comentario' | 'comentarioBloque'
<declare> ::= <type> <var> <branch>
<branch> ::= ( <params> ) { <stmt> } | <eq> <var_fin> <eol>
<params> ::= <type> <var> <cm> <var_params> | ""
<var_params> ::= <params>
<eq> ::= = | ,
<cm> ::= , | ""
<var_fin> ::= <branch> | 'letterdigit' | ""
<type> ::= "int" | "char" | "float" | "void"
<var> ::= 'identificador'
<eol> ::= ;
<stmt> ::= <expStmt> <eol> | <ifStmt> | <iterStmt> | <returnStmt>
<returnStmt> ::= return <var_stmt> <eol>
<expStmt> ::= <type> <var> <eq> <var_stmt> | <var> <op> <expr>
<var_stmt> ::= <expStmt> | 'letterdigit' | ""
<ifStmt> ::= if ( <ASimpleExp> ) { <stmt> } <els>
<els> ::= else { <stmt> } | ""
<iterStmt> ::= while ( <ASimpleExp> ) { <stmt> } | do { <stmt> } while ( <ASimpleExp> ) | for ( <expStmt> ; <expStmt> ; <expStmt> ) { <stmt> }
<op> ::= "<" | "<=" | ">" | ">=" | "=" | "==" | "||" | "&&" 
<expr> ::= <var> <expr_tail> | "TRUE" | "FALSE" | 'letterdigit'
<expr_tail> ::= + <expr> | - <expr> | * <expr> | / <expr> | ""
<ASimpleExp> ::= ! ( <simpleExp> ) | <simpleExp> | <expr>
<simpleExp> ::= <var> <op> <expr>
